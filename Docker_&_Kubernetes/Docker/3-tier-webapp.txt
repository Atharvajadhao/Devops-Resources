-----------------------------------------Dockerfile tree-------------------------------------------------------
.
├── backendDockerFile
│   ├── Dockerfile
│   └── new_chatapp
├── databaseDockerFile
│   └── Dockerfile
└── frontendDockerFile
    ├── Dockerfile
    └── nginx.conf

-----------------------------------------Dockerfile for Database------------------------------------------------

FROM mysql:latest
ENV MYSQL_DATABASE chat_db
ENV MYSQL_ROOT_PASSWORD root123
ENV MYSQL_USER admin
ENV MYSQL_PASSWORD admin
EXPOSE 3306

-----------------------------------------Dockerfile for Backend-------------------------------------------------

FROM python:3.6
ENV DATABASE_NAME chat_db
ENV DATABASE_USER admin
ENV DATABASE_PASS admin
ENV DATABASE_HOST database
RUN apt-get update
RUN apt-get install --yes python3-pip git
WORKDIR /root/
RUN git clone https://github.com/Atharvajadhao/new_chatapp.git
WORKDIR /root/new_chatapp
RUN pip3 install -r requirements.txt
RUN pip3 install mysqlclient
EXPOSE 8000
WORKDIR /root/new_chatapp/fundoo/
ENTRYPOINT  python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000

----------------------------------------Dockerfile for Frontend-------------------------------------------------

FROM ubuntu
RUN apt-get update
RUN apt-get install -y nginx
COPY nginx.conf /etc/nginx/sites-available/fundoo
RUN ln -s /etc/nginx/sites-available/fundoo /etc/nginx/sites-enabled
RUN rm -rf /etc/nginx/sites-enabled/default
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]


----------------------------------------Docker Compose file-----------------------------------------------------

version: '2'
services:
    database:
        build:
            dockerfile: Dockerfile
            context: /home/ubuntu/3-tier-web-app/databaseDockerFile/
        container_name: database
        networks:
            - my_bridge
    backend:
        build:
            dockerfile: Dockerfile
            context: /home/ubuntu/3-tier-web-app/backendDockerFile/
        container_name: backend
        networks:
            - my_bridge
        depends_on:
          - database
    frontend:
        build:
            dockerfile: Dockerfile
            context: /home/ubuntu/3-tier-web-app/frontendDockerFile/
        container_name: frontend
        ports:
            - 80:80
        depends_on:
            - backend
        networks:
            - my_bridge
            - frontend

networks:
    my_bridge:
        driver: bridge
    frontend:
        driver: bridge




Docker Compose command:
	> sudo docker compose up







