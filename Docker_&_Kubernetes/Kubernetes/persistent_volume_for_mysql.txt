We need to store the data of mysql-database, so that it should be persistent. If it does not have persistent volume, then the data can be lost, if the pod on which mysql us running get deleted.

First create a EBS volume in you AWS console.

Then we need to create Persistent Volume for that EBS in our cluster, to make it available for claim in cluster.
	apiVersion: v1
	kind: PersistentVolume
	metadata:
	  name: my-ebs-vol
	spec:
	  capacity:
	    storage: 10Gi
	  accessModes:
	    - ReadWriteMany
	  persistentVolumeReclaimPolicy: Retain
	  awsElasticBlockStore:
	    volumeID: vol-07638d918071717ad
	    fsType: ext4

	- ReadWriteMany: the volume can be mounted as read-write by many nodes

Create a storage class:
	kind: StorageClass
	apiVersion: storage.k8s.io/v1
	metadata:
	  name: efs-sc
	provisioner: k8s.io/minikube-hostpath 
	volumeBindingMode: Immediate
	parameters:
	  type: gp3
	allowVolumeExpansion: true
	reclaimPolicy: Retain

Now we need to create a persistent volume claim so that any pod can claim the storage
	apiVersion: v1
	kind: PersistentVolumeClaim
	metadata:
	  name: my-ebs-vol-claim
	spec:
	  accessModes:
	    - ReadWriteMany
	  resources:
	    requests:
	      storage: 5Gi


Now we need to edit some files in database-deployment.yml file

apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
      - name: database
        image: atharvajadhao/database-image:latest
        ports:
          - containerPort: 3306
        volumeMounts:
          - name: mysql-data
            mountPath: "/var/lib/mysql"
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: my-ebs-vol-claim























