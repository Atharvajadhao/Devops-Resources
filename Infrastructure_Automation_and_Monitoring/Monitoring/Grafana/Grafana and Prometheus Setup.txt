1) Installing Grafana
Installing grafana on the server where you want to monitor the resources
	Following are steps to install Grafana from the APT repository:
		a. Install the prerequisite packages:
	   	   sudo apt-get install -y apt-transport-https software-properties-common wget

		b. Import the GPG key:
	           sudo mkdir -p /etc/apt/keyrings/
	   	   wget -q -O - https://apt.grafana.com/gpg.key | gpg --dearmor | sudo tee /etc/apt/keyrings/grafana.gpg > /dev/null

		c. To add a repository for stable releases, run the following command:
	   	   echo "deb [signed-by=/etc/apt/keyrings/grafana.gpg] https://apt.grafana.com stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list

		d. Run the following command to update the list of available packages:
		   sudo apt-get update
	
		e. To install Grafana OSS, run the following command:
		   sudo apt-get install grafana
	
	Start the Grafana server:
		a. To start the service, run the following commands:
		   sudo systemctl daemon-reload
		   sudo systemctl start grafana-server
		   sudo systemctl status grafana-server
		   sudo systemctl status grafana-server

	Open the grafana UI at <server_public_id>:3000
	With:
	  - username: admin
	  - password: admin

2) Install Node Exporter on your server that your monitoring
	cd /opt
 	sudo wget https://github.com/prometheus/node_exporter/releases/download/v1.3.1/node_exporter-1.3.1.linux-amd64.tar.gz
 	tar xf node_exporter-1.3.1.linux-amd64.tar.gz
 	cd node_exporter-1.3.1.linux-amd64/
 	./node_exporter
	Now check on browser by <Node_Exporter_server IP>:9100
	
	Now we add our Node_Exporter in systemd service
	sudo useradd --no-create-home --shell /bin/false node_exporter
 	sudo cp node_exporter /usr/local/bin
	cd /lib/systemd/system
	sudo vi node_exporter.service
	Add following to that file:
		[Unit]
		Description=Node Exporter
		After=network.target

		[Service]
		User=node_exporter
		Group=node_exporter
		Type=simple
		ExecStart=/usr/local/bin/node_exporter

		[Install]
		WantedBy=multi-user.target
	
 	sudo systemctl daemon-reload
 	sudo systemctl enable node_exporter
 	sudo systemctl start node_exporter
  	sudo systemctl status node_exporter



3) Install and configure prometheus:
	a. Download prometheus and extract and enter that directory
	   wget https://github.com/prometheus/prometheus/releases/download/v2.49.0-rc.1/prometheus-2.49.0-rc.1.linux-amd64.tar.gz
	   tar xvfz prometheus-*.tar.gz
	   cd prometheus-2.49.0-rc.1.linux-amd64/
	
	b. Locate the prometheus.yml file in the directory.
	   Modify Prometheusâ€™s configuration file to monitor the hosts where you installed node_exporter.
	   Eg.:
	    # A scrape configuration containing exactly one endpoint to scrape from node_exporter running on a host:	
	    scrape_configs:
	     # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
	     - job_name: 'node'

	     # metrics_path defaults to '/metrics'
	     # scheme defaults to 'http'.
	
	       static_configs:
	       - targets: ['localhost:9100']
	
	c. Start the prometheus service
	   ./prometheus --config.file=./prometheus.yml
	
	d. Confirm that Prometheus is running by navigating to http://<public_ip_of_server>:9090.

4) Configure Prometheus for Grafana
	Because you are running your own Prometheus instance locally, you must remote_write your metrics to the Grafana.com Prometheus instance. Grafana provides code to add to your prometheus.yml config file. This includes a remote write endpoint, your user name and password.
	Add the following code to your prometheus.yml file to begin sending metrics to your hosted Grafana instance.
	remote_write:
	- url: <https://your-remote-write-endpoint>
	  basic_auth:
	    username: <your user name>
	    password: <Your Grafana.com API Key>